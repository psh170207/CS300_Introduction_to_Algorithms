#Bogo_sort in python.
import random

def islax(list): # check whether input list is sorted or not.
    i=0
    for i in range(len(list)):
        if i<len(list)-1:
            if list[i]>list[i+1]: return False
        i=i+1
    return True


def Bogo(list): # Implementing Bogo sort with shuffle method.
    number_of_comp=0
    while not islax(list):
        random.shuffle(list) # shuffle method randomly generate a permutation so that all are equally likely.
        number_of_comp=number_of_comp+1
    print number_of_comp
    return list


input_list = raw_input("Input sequence(form of 1,2,3,4,..) : ")
input_list = input_list.split(",")
for i in range(len(input_list)):
    input_list[i]=int(input_list[i]) # cast string to int for input_list

print input_list
print Bogo(input_list)

'''
testing code(n=11,10,9,...,2)

print Bogo([781,333,412,642,773,998,111,108,425,764,398])
print Bogo([123,456,789,104,122,553,715,867,914,616,343])

print Bogo([781,333,412,642,773,998,111,108,425])
print Bogo([123,456,789,104,122,553,715,867,914])
print Bogo([45,32,11,64,36,71,31,87,99])

print Bogo([8,7,6,5,4,3,2,1])
print Bogo([67,54,32,17,85,43,26,18])
print Bogo([456,111,243,678,876,999,422,187])

print Bogo([7,6,5,4,3,2,1])
print Bogo([14,23,64,16,78,99,45])
print Bogo([111,453,222,786,444,253,756])

print Bogo([6,5,4,3,2,1])
print Bogo([54,24,16,78,99,32])
print Bogo([432,677,641,543,163,876])

print Bogo([5,4,3,2,1])
print Bogo([32,15,64,31,77])
print Bogo([142,644,756,462,975])

print Bogo([4,3,2,1])
print Bogo([43,65,81,23])
print Bogo([421,115,634,731])

print Bogo([3,2,1])
print Bogo([13,76,31])
print Bogo([913,134,423])

print Bogo([2,1])
print Bogo([51,32])
print Bogo([431,134])
'''

"""
testing result(input/comparison number/output)

n=11
[11, 33, 56, 22, 78, 42, 17, 85, 43, 21, 99]
3442204
[11, 17, 21, 22, 33, 42, 43, 56, 78, 85, 99]

[781,333,412,642,773,998,111,108,425,764,398]
40402907
[108, 111, 333, 398, 412, 425, 642, 764, 773, 781, 998]

[123,456,789,104,122,553,715,867,914,616,343]
72398230
[104, 122, 123, 343, 456, 553, 616, 715, 789, 867, 914]
n=10
[45, 32, 11, 56, 67, 12, 56, 14, 57, 87, 99]
25145836
[11, 12, 14, 32, 45, 56, 56, 57, 67, 87, 99]

[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
3395080
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

[78, 65, 3, 6, 11, 87, 184, 554, 44, 71]
10174021
[3, 6, 11, 44, 65, 71, 78, 87, 184, 554]

n=9
[781,333,412,642,773,998,111,108,425]
111671
[108, 111, 333, 412, 425, 642, 773, 781, 998]
[123,456,789,104,122,553,715,867,914]
60806
[104, 122, 123, 456, 553, 715, 789, 867, 914]
[45,32,11,64,36,71,31,87,99]
1642259
[11, 31, 32, 36, 45, 64, 71, 87, 99]

n=8
[8,7,6,5,4,3,2,1]
23841
[1, 2, 3, 4, 5, 6, 7, 8]
[67,54,32,17,85,43,26,18]
29748
[17, 18, 26, 32, 43, 54, 67, 85]
[456,111,243,678,876,999,422,187]
36112
[111, 187, 243, 422, 456, 678, 876, 999]

n=7
[7,6,5,4,3,2,1]
12267
[1, 2, 3, 4, 5, 6, 7]
[14,23,64,16,78,99,45]
1962
[14, 16, 23, 45, 64, 78, 99]
[111,453,222,786,444,253,756]
23214
[111, 222, 253, 444, 453, 756, 786]

n=6
[6,5,4,3,2,1]
18
[1, 2, 3, 4, 5, 6]
[54,24,16,78,99,32]
475
[16, 24, 32, 54, 78, 99]
[432,677,641,543,163,876]
947
[163, 432, 543, 641, 677, 876]

n=5
[5,4,3,2,1]
123
[1, 2, 3, 4, 5]
[32,15,64,31,77]
8
[15, 31, 32, 64, 77]
[142,644,756,462,975]
191
[142, 462, 644, 756, 975]

n=4
[4,3,2,1]
76
[1, 2, 3, 4]
[43,65,81,23]
15
[23, 43, 65, 81]
[421,115,634,731]
1
[115, 421, 634, 731]

n=3
[3,2,1]
2
[1, 2, 3]
[13,76,31]
5
[13, 31, 76]
[913,134,423]
10
[134, 423, 913]

n=2
[2,1]
1
[1, 2]
[51,32]
1
[32, 51]
[431,134]
1
[134, 431]
"""

